openapi: 3.0.0
info:
  title: Restaurant Management
  description: Restaurant Management API documentation
  version: '1.0'
  x-logo:
    url: https://github.com/joolfe/logoBanner.png
    backgroundColor: '#FFFFFF'
    altText: logo
  termsOfService: '#'
  contact:
    name: Scodus
    url: https://scodus.com
    email: scodusnp@gmail.com
  license:
    name: MIT
    url: https://es.wikipedia.org/wiki/Licencia_MIT
servers:
  - url: https://restro.knexperts.com/
    description: server
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
tags:
  - name: Admin
  - name: Admin > Customers
  - name: Admin > User
  - name: Admin > Product Category
  - name: Admin > Product Variation
  - name: Admin > Product
  - name: Admin > Table
  - name: Admin > Floor
  - name: Admin > Site Setting
  - name: Admin > Payment Option
  - name: Admin > PickUp Users
  - name: Admin > Order
  - name: Admin > Order Details
  - name: Admin > Order Payment
  - name: Admin > Customer Partial Payments
  - name: Admin > Reports
  - name: Admin > Cashier
  - name: Public
  - name: Public > Auth
paths:
  /admin/customers:
    post:
      tags:
        - Admin > Customers
      summary: create customer account
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Nitesh Hamal
                email:
                  type: string
                  example: nitesh@gmail.com
                phone:
                  type: integer
                  example: '9825915122'
                address:
                  type: string
                  example: KTM
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Admin > Customers
      summary: get all customers
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: pagination_limit
          in: query
          schema:
            type: integer
          example: '5'
        - name: status
          in: query
          schema:
            type: string
          example: due
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/customers/{slug}:
    post:
      tags:
        - Admin > Customers
      summary: update customer details
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Nitesh Hamal
                email:
                  type: string
                  example: nitesh@gmail.com
                phone:
                  type: integer
                  example: '9813371345'
                address:
                  type: string
                  example: KTM
                _method:
                  type: string
                  example: put
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: slug
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Admin > Customers
      summary: delete customer
      security:
        - bearerAuth: []
      parameters:
        - name: slug
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/customers/show-orders/{customer_id}:
    get:
      tags:
        - Admin > Customers
      summary: show single customer orders
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: customer_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/customers/{customer_id}:
    get:
      tags:
        - Admin > Customers
      summary: show single customer data
      parameters:
        - name: status
          in: query
          schema:
            type: string
          example: due
        - name: customer_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/users:
    post:
      tags:
        - Admin > User
      summary: create user account
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Hancie Phago
                email:
                  type: string
                  example: hancie1@gmail.com
                role:
                  type: string
                  example: admin
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Admin > User
      summary: get all user
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: pagination_limit
          in: query
          schema:
            type: integer
          example: '2'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/users/change-password:
    post:
      tags:
        - Admin > User
      summary: change user password
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                current_password:
                  type: integer
                  example: '12656566'
                password:
                  type: string
                  example: password
                password_confirmation:
                  type: string
                  example: password
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/users/47:
    post:
      tags:
        - Admin > User
      summary: update user
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Nitesh Hamal
                email:
                  type: string
                  example: nitesh0hamal@gmail.com
                role:
                  type: string
                  example: cashier
                location:
                  type: string
                  example: ktm5
                phone_no:
                  type: integer
                  example: '9825915122'
                _method:
                  type: string
                  example: put
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/users/53:
    delete:
      tags:
        - Admin > User
      summary: delete user
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /email-verified:
    get:
      tags:
        - Admin > User
      summary: email verified
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/users/{id}:
    get:
      tags:
        - Admin > User
      summary: get single user data
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/product-categories:
    post:
      tags:
        - Admin > Product Category
      summary: create product category
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                category_name:
                  type: string
                  example: Momo
                parent_category_id:
                  type: integer
                  example: '1'
                description:
                  type: string
                  example: My momo
                category_image:
                  type: string
                  format: binary
                bar:
                  type: string
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Admin > Product Category
      summary: get all product category
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/product-categories/{slug}:
    delete:
      tags:
        - Admin > Product Category
      summary: delete product category
      parameters:
        - name: slug
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Admin > Product Category
      summary: get single product category
      parameters:
        - name: slug
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/product-categories/momo:
    post:
      tags:
        - Admin > Product Category
      summary: updated product category
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                category_name:
                  type: string
                  example: Momo
                parent_category_id:
                  type: integer
                  example: '2'
                category_image:
                  type: string
                  format: binary
                description:
                  type: string
                  example: My momo
                bar:
                  type: integer
                  example: '1'
                _method:
                  type: string
                  example: put
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/product-variations:
    post:
      tags:
        - Admin > Product Variation
      summary: store product variation
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                variation_name:
                  type: string
                  example: Masala Tea
                description:
                  type: string
                  example: Masala Tea
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Admin > Product Variation
      summary: get all product variation
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: pagination_limit
          in: query
          schema:
            type: integer
          example: '2'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/product-variations/{product_id}:
    post:
      tags:
        - Admin > Product Variation
      summary: update product variation
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                variation_name:
                  type: string
                  example: Momo
                description:
                  type: string
                  example: Steamed Momo
                _method:
                  type: string
                  example: put
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: product_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Admin > Product Variation
      summary: delete product variation
      parameters:
        - name: product_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/products:
    post:
      tags:
        - Admin > Product
      summary: create product
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                product_name: Momo
                product_category_id: 1
                ingredient: gffg
                description: fgfgfg
                has_variation: 1
                variations:
                  - variation_name: Steam Momo
                    price: 100
                  - variation_name: Fry Momo
                    price: 200
                base_price: 550
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Admin > Product
      summary: get all product
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/products/chicken:
    post:
      tags:
        - Admin > Product
      summary: update product
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                product_name: Chicken
                product_category_id: 1
                ingredient: gffg
                description: fgfgfg
                has_variation: 1
                variations:
                  - id: 34
                    variation_name: Steam
                    price: 200
                  - variation_name: '2'
                    price: 200
                base_price: 550
                _method: put
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/products/{slug}:
    delete:
      tags:
        - Admin > Product
      summary: delete product
      parameters:
        - name: slug
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/tables:
    post:
      tags:
        - Admin > Table
      summary: create table
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                table_number:
                  type: string
                  example: T11
                description:
                  type: string
                  example: Table no t 11
                table_capacity:
                  type: integer
                  example: '3'
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Admin > Table
      summary: get all table list
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/tables/{id}:
    post:
      tags:
        - Admin > Table
      summary: update table data
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                table_number:
                  type: string
                  example: T10
                description:
                  type: string
                  example: Table no t 10
                table_capacity:
                  type: integer
                  example: '3'
                _method:
                  type: string
                  example: put
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/tables/1:
    delete:
      tags:
        - Admin > Table
      summary: delete table
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/floors:
    post:
      tags:
        - Admin > Floor
      summary: create floor
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                floor_name:
                  type: string
                  example: F58
                description:
                  type: string
                  example: f1
                table_numbers[]:
                  type: string
                  example: T11
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/floors/1:
    post:
      tags:
        - Admin > Floor
      summary: update floor
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                floor_name:
                  type: string
                  example: F1
                description:
                  type: string
                  example: f1
                table_numbers[]:
                  type: integer
                  example: '3'
                _method:
                  type: string
                  example: put
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/floors/{id}:
    delete:
      tags:
        - Admin > Floor
      summary: delete floor
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/floors/:
    get:
      tags:
        - Admin > Floor
      summary: get all floor list
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/site-settings:
    post:
      tags:
        - Admin > Site Setting
      summary: create site setting
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                site_title:
                  type: string
                  example: Hotel Management System
                phone_number:
                  type: string
                seconday_phone_number:
                  type: string
                address:
                  type: string
                primary_email:
                  type: string
                secondary_email:
                  type: string
                map_location:
                  type: string
                registration_number:
                  type: string
                facebook_url:
                  type: string
                twitter_url:
                  type: string
                linkedin_url:
                  type: string
                youtube_url:
                  type: string
                instagram_url:
                  type: string
                logo:
                  type: string
                  format: binary
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Admin > Site Setting
      summary: get site setting data
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/payment_options:
    post:
      tags:
        - Admin > Payment Option
      summary: create payment option
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                payment_name:
                  type: string
                  example: ImePay
                payment_image:
                  type: string
                  format: binary
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Admin > Payment Option
      summary: get all payment options
      security:
        - bearerAuth: []
      parameters:
        - name: pagination_limit
          in: query
          schema:
            type: integer
          example: '2'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/payment_options/imepay:
    delete:
      tags:
        - Admin > Payment Option
      summary: delete payment options
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/payment_options/khalti:
    post:
      tags:
        - Admin > Payment Option
      summary: update payment option
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                payment_name:
                  type: string
                  example: khalti
                payment_image:
                  type: string
                  format: binary
                _method:
                  type: string
                  example: put
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/pickup-users:
    post:
      tags:
        - Admin > PickUp Users
      summary: create pickup users
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                full_name:
                  type: string
                  example: Nitesh Hamal
                mobile_no:
                  type: integer
                  example: '9813371345'
                location:
                  type: string
                  example: Shankamul
                time:
                  type: string
                  example: '2023-10-16 09:12:00'
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Admin > PickUp Users
      summary: get all pick up user
      security:
        - bearerAuth: []
      parameters:
        - name: pagination_limit
          in: query
          schema:
            type: integer
          example: '2'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/pickup-users/{id}:
    delete:
      tags:
        - Admin > PickUp Users
      summary: delete pickup user
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    post:
      tags:
        - Admin > PickUp Users
      summary: update pickup user
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                full_name:
                  type: string
                  example: Pravesh Rai
                mobile_no:
                  type: integer
                  example: '9813371345'
                location:
                  type: string
                  example: Shankamul
                time:
                  type: string
                  example: '2023-10-16 09:12:00'
                _method:
                  type: string
                  example: put
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/orders:
    post:
      tags:
        - Admin > Order
      summary: create order
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                table_id: 1
                customer_id: 1
                pickup_user_id: 1
                description: ab cd ef gh
                productDetails:
                  - product_variation_id: 45
                    price: 100
                    quantity: 5
                  - product_variation_id: 46
                    price: 150
                    quantity: 2
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Admin > Order
      summary: get all order list
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: pagination_limit
          in: query
          schema:
            type: integer
          example: '20'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/orders/{id}:
    post:
      tags:
        - Admin > Order
      summary: edit order
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                table_id: 1
                customer_id: 2
                pickup_user_id: 2
                description: Momo
                _method: put
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Admin > Order
      summary: delete order
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/orders/status/{id}:
    post:
      tags:
        - Admin > Order
      summary: change status
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                status:
                  type: string
                  example: cancelled
                _method:
                  type: string
                  example: patch
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/orders/{table_id}:
    get:
      tags:
        - Admin > Order
      summary: get single order by table no
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: table_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/orders/pickup-user/{pickup_user_id}:
    get:
      tags:
        - Admin > Order
      summary: get single order by pickup user
      security:
        - bearerAuth: []
      parameters:
        - name: pickup_user_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/orders/all:
    get:
      tags:
        - Admin > Order
      summary: get all order for order table
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: pagination_limit
          in: query
          schema:
            type: integer
          example: '1'
        - name: search
          in: query
          schema:
            type: string
          example: payment_order_no
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/orders/all/{payment_order_no}:
    get:
      tags:
        - Admin > Order
      summary: get single data for order table
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: payment_order_no
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/order-details/{id}:
    delete:
      tags:
        - Admin > Order Details
      summary: delete order details
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    post:
      tags:
        - Admin > Order Details
      summary: update order details
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                product_variation_id:
                  type: integer
                  example: '2'
                _method:
                  type: string
                  example: put
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/order-details/status/{id}:
    post:
      tags:
        - Admin > Order Details
      summary: change status
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                status:
                  type: string
                  example: ordered
                _method:
                  type: string
                  example: patch
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/order-details:
    get:
      tags:
        - Admin > Order Details
      summary: get all order detail
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: pagination_limit
          in: query
          schema:
            type: integer
          example: '10'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/order-details/quantity/{id}:
    post:
      tags:
        - Admin > Order Details
      summary: update order detail quantity
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                quantity:
                  type: integer
                  example: '10'
                _method:
                  type: string
                  example: patch
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/order-payments:
    post:
      tags:
        - Admin > Order Payment
      summary: store order payments
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                payment_order_no: 20
                payment_method: 1
                table_id: 2
                customer_id: 1
                orders:
                  - order_id: 1
                  - order_id: 2
                subtotal: 344
                tax: 3
                discount: 3434
                discount_type: rupees
                net_total: 100
                paid: 10
                return: 344
                net_amount: 34434
                name: Pravesh Rai
                email: pravesh@gmail.com
                phone: 983443354
                address: lalitpur
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Admin > Order Payment
      summary: get all order payment
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: pagination_limit
          in: query
          schema:
            type: integer
          example: '10'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/order-payments/{id}:
    delete:
      tags:
        - Admin > Order Payment
      summary: delete order payment
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/customer-partial-payment/{customer_id}:
    post:
      tags:
        - Admin > Customer Partial Payments
      summary: update customer partial payment
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                paid_amount:
                  type: integer
                  example: '20'
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: customer_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/customer-partial-payment/order-items/{id}:
    get:
      tags:
        - Admin > Customer Partial Payments
      summary: get order items data by customer partial id
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/reports/daily-income:
    get:
      tags:
        - Admin > Reports
      summary: daily income
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: pagination_limit
          in: query
          schema:
            type: integer
          example: '3'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/reports/sales-by-user:
    get:
      tags:
        - Admin > Reports
      summary: sales by user
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/reports/sales-by-category:
    get:
      tags:
        - Admin > Reports
      summary: sales by category
      security:
        - bearerAuth: []
      parameters:
        - name: pagination_limit
          in: query
          schema:
            type: integer
          example: '2'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/reports/cancelled-orders:
    get:
      tags:
        - Admin > Reports
      summary: cancelled orders report
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: pagination_limit
          in: query
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/reports/income-by-time:
    get:
      tags:
        - Admin > Reports
      summary: income by time
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: pagination_limit
          in: query
          schema:
            type: integer
          example: '5'
        - name: date
          in: query
          schema:
            type: string
          example: 12-04-2023
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/cashier/today-sales:
    get:
      tags:
        - Admin > Cashier
      summary: get today sales
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: pagination_limit
          in: query
          schema:
            type: integer
          example: '2'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/login:
    post:
      tags:
        - Public > Auth
      summary: login
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: hanciephago@gmail.com
                password:
                  type: string
                  example: password
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
